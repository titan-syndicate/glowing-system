name: deploy-release

on:
  workflow_dispatch:

jobs:
  update-app-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract app version
        id: extract_version
        run: |
          echo "Installing yq..."
          wget https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq

          echo "Extracting app version from Helm chart..."
          app_version=$(yq e '.appVersion' charts/next-app-chart/Chart.yaml)
          echo "App version: $app_version"

          # Setting the extracted app version as an output variable
          echo "::set-output name=app_version::$app_version"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            rianfowler/next-app:${{ steps.extract_version.outputs.app_version }}

  update-helm-repo:
    needs: update-app-image
    runs-on: ubuntu-latest

    steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Checkout source repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: glowing-system
        ref: main

    - name: Clone target repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main
        repository: titan-syndicate/glowing-system-charts
        path: glowing-system-charts
        token: ${{ secrets.GLOWING_SYSTEM_CHARTS_GITHUB_TOKEN }}

    - name: Check for existing version in target repo
      run: |
        cd $GITHUB_WORKSPACE/glowing-system
        NEW_VERSION=$(helm show chart charts/next-app-chart | grep version | cut -d: -f2 | tr -d ' ')
        cd $GITHUB_WORKSPACE/glowing-system-charts
        if grep -q "version: $NEW_VERSION" index.yaml; then
          echo "Error: Chart version $NEW_VERSION already exists. Increment the version before pushing!"
          exit 1
        fi

    - name: Lint and Package Helm Chart
      run: |
        cd $GITHUB_WORKSPACE/glowing-system
        helm lint charts/next-app-chart
        helm package charts/next-app-chart -d $GITHUB_WORKSPACE/glowing-system-charts

    - name: Commit package to target repo
      run: |
        cd $GITHUB_WORKSPACE/glowing-system-charts
        helm repo index . --url https://titan-syndicate.github.io/glowing-system-charts/
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add -A
        git commit -m "Add new chart version"

    - name: Push to another repo
      run: |
        # Add remote repository
        cd $GITHUB_WORKSPACE/glowing-system-charts
        git remote add target_repo https://x-access-token:${{ secrets.GLOWING_SYSTEM_CHARTS_GITHUB_TOKEN }}@github.com/titan-syndicate/glowing-system-charts.git

        # Push changes
        git push target_repo HEAD:main

  upgrade-dev-environment:
    needs: update-helm-repo
    runs-on: ubuntu-latest

    steps:
    - name: Set up kubeconfig
      run: |
        echo "$KUBECONFIG_64" | base64 -d > kubeconfig.yaml

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Add Helm Repository
      run: |

        helm repo add titan-syndicate https://titan-syndicate.github.io/glowing-system-charts/
        helm repo update
        helm plugin install https://github.com/titan-syndicate/helm-latest-prerelease

    - name: Install or Upgrade Helm Chart
      run: |
        helm upgrade -i --kubeconfig kubeconfig.yaml glowing-system titan-syndicate/next-app-chart --version=$(helm latest-prerelease titan-syndicate/next-app-chart)

    env:
      KUBECONFIG_64: ${{ secrets.KUBECONFIG_64 }}